---
import Layout from "../../layouts/Layout.astro";
import TagLink from "../../components/TagLink.svelte";
import { getCollection } from "astro:content";
import { novels, getNovelById } from "../../utils/novels";
import { compareTagCategories } from "../../utils/sorting";
import ReviewLevelBadge from "../../components/ReviewLevelBadge.astro";
import TierMark from "../../components/TierMark.svelte";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  return novels.map((novel) => ({
    params: { id: novel.id },
  }));
}

const { id } = Astro.params;
const novel = getNovelById(id!);

if (!novel) {
  return Astro.redirect("/404");
}

// Get all reviews for this novel
const allReviews = await getCollection("review");
const novelReviews = allReviews
  .filter((review) => review.data.novelId === novel.id)
  .sort((a, b) => a.data.sortNumber - b.data.sortNumber);

const allTags = await getCollection("tag");
---

<Layout title={novel.name} description={`${novel.name}の詳細情報とレビュー`}>
  <div class="container-narrow">
    <article class="novel-detail">
      <div class="novel-header">
        <div class="cover-section">
          {novel.coverImage && (
            <Image 
              src={novel.coverImage} 
              alt={`${novel.name}の表紙`} 
              class="cover"
              width={300}
              height={400}
            />
          )}
        </div>

        <div class="info-section">
          <h1>
            <TierMark tier={novel.ratingTier} />
            <span>
              {novel.name}
            </span>
          </h1>
          <div class="meta-info">
            <div class="meta-item">
              <span class="meta-label">読み方:</span>
              <span class="meta-value">{novel.hiragana}</span>
            </div>

            <div class="meta-item">
              <span class="meta-label">著者:</span>
              <span class="meta-value">{novel.authors.writer}</span>
            </div>

            <div class="meta-item">
              <span class="meta-label">イラスト:</span>
              <span class="meta-value">{novel.authors.illustrator}</span>
            </div>
          </div>

          {
            novel.tags.length > 0 && (
              <div class="tags-section">
                <h3>タグ</h3>
                <div class="tags">
                  {novel.tags
                    .map((tagId) => {
                      const tag = allTags.find(
                        (tag) => tag.data.id === tagId,
                      )?.data;
                      if (!tag) {
                        throw new Error(`Tag with id ${tagId} not found`);
                      }
                      return tag;
                    })
                    .sort((a, b) =>
                      compareTagCategories(a.category, b.category),
                    )
                    .map((tag) => (
                      <TagLink
                        tagId={tag.id}
                        category={tag.category}
                        name={tag.name}
                      />
                    ))}
                </div>
              </div>
            )
          }
        </div>
      </div>

      {
        novelReviews.length > 0 && (
          <section class="reviews-section">
            <h2>レビュー</h2>
            <div class="reviews-list">
              {novelReviews.map((review) => (
                <article class="review-item">
                  <a
                    href={`/review/${review.data.novelId}/${review.data.sortNumber}`}
                  >
                    <h3>{review.data.title}</h3>
                  </a>
                  <div>
                    <span class="review-date">
                      {review.data.publishedAt.toLocaleDateString("ja-JP")}
                    </span>
                    <ReviewLevelBadge level={review.data.level} />
                  </div>
                </article>
              ))}
            </div>
          </section>
        )
      }

      {
        novelReviews.length === 0 && (
          <p class="no-reviews">この作品のレビューはまだありません。</p>
        )
      }
    </article>
  </div>
</Layout>

<style lang="scss">
  @use "../../styles/variables" as *;

  .novel-detail {
    padding: $spacing-xl 0;
  }

  .novel-header {
    display: grid;
    grid-template-columns: 300px 1fr;
    gap: $spacing-2xl;
    margin-bottom: $spacing-2xl * 1.5;

    @media (max-width: $tablet) {
      grid-template-columns: 1fr;
    }
  }

  .cover-section {
    .cover {
      width: 100%;
      border-radius: $radius-lg;
      box-shadow: $shadow-lg;
      margin-bottom: $spacing-lg;

      @media (max-width: $tablet) {
        max-width: 200px;
        margin: $spacing-md auto;
      }
    }
  }

  .info-section {
    h1 {
      display: flex;
      align-items: center;
      gap: $spacing-md;
      span {
        font-size: $font-size-3xl;
        color: var(--color-text);
      }
      margin-bottom: $spacing-xl;
    }
  }

  .meta-info {
    background-color: var(--color-card);
    padding: $spacing-lg;
    border-radius: $radius-md;
    margin-bottom: $spacing-xl;
  }

  .meta-item {
    margin-bottom: $spacing-sm;

    &:last-child {
      margin-bottom: 0;
    }

    .meta-label {
      font-weight: 600;
      color: var(--color-text);
      margin-right: $spacing-sm;
    }

    .meta-value {
      color: var(--color-text);
    }
  }

  .tags-section {
    h3 {
      font-size: $font-size-lg;
      margin-bottom: $spacing-md;
    }

    .tags {
      display: flex;
      flex-wrap: wrap;
      gap: $spacing-sm;
    }
  }

  .reviews-section {
    h2 {
      font-size: $font-size-2xl;
      margin-bottom: $spacing-xl;
      padding-bottom: $spacing-sm;
      border-bottom: 2px solid var(--color-border);
    }
  }

  .reviews-list {
    display: flex;
    flex-direction: column;
    gap: $spacing-lg;
  }

  .review-item {
    padding: $spacing-md;
    background-color: var(--color-card);
    border-radius: $radius-md;
    border: 1px solid var(--color-border);
    h3 {
      margin-bottom: $spacing-sm;
      a {
        color: var(--color-text);
        text-decoration: none;

        &:hover {
          color: var(--color-highlight);
        }
      }
    }

    .review-date {
      font-size: $font-size-sm;
      color: var(--color-text-secondary);
      margin-right: $spacing-sm;
    }
  }

  .no-reviews {
    text-align: center;
    padding: $spacing-2xl;
    color: var(--color-text-secondary);
    background-color: var(--color-card);
    border-radius: $radius-md;
  }
</style>
