---
import Layout from '../../layouts/Layout.astro';
import { getCollection, render } from 'astro:content';
import '../../styles/markdown.scss';

export async function getStaticPaths() {
  const blogs = await getCollection('blog');
  return blogs.map((blog) => ({
    params: { slug: blog.id },
    props: { entry: blog },
  }));
}

const { entry } = Astro.props;
const { Content } = await render(entry);
---

<Layout 
  title={entry.data.title} 
  description={entry.data.description}
>
  <article class="container-narrow blog-article">
    <header class="article-header">
      <a href="/articles" class="back-link-small">← 記事一覧</a>
      
      <h1>{entry.data.title}</h1>
      
      <p class="description">{entry.data.description}</p>
      
      <div class="article-meta">
        {entry.data.isPinned && (
          <span class="pinned-badge">固定</span>
        )}
        <time datetime={entry.data.publishedAt.toISOString()}>
          公開: {entry.data.publishedAt.toLocaleDateString('ja-JP')}
        </time>
        {entry.data.updatedAt && (
          <time datetime={entry.data.updatedAt.toISOString()}>
            更新: {entry.data.updatedAt.toLocaleDateString('ja-JP')}
          </time>
        )}
        
      </div>
    </header>

    <div class="markdown-content">
      <Content />
    </div>

    <footer class="article-footer">
      <a href="/articles" class="back-link">
        ← 記事一覧に戻る
      </a>
    </footer>
  </article>
</Layout>

<style lang="scss">
  @use '../../styles/variables' as *;

  .blog-article {
    padding: $spacing-2xl 0;
  }

  .article-header {
    margin-bottom: $spacing-2xl;
    padding-bottom: $spacing-xl;
    border-bottom: 2px solid var(--color-border);
  }

  .back-link-small {
    display: inline-block;
    margin-bottom: $spacing-lg;
    color: var(--color-primary);
    text-decoration: none;
    font-size: $font-size-sm;

    &:hover {
      text-decoration: underline;
    }
  }

  h1 {
    font-size: $font-size-3xl;
    margin-bottom: $spacing-md;
    line-height: 1.3;
  }

  .description {
    font-size: $font-size-lg;
    color: var(--color-text-secondary);
    margin-bottom: $spacing-lg;
    line-height: 1.6;
  }

  .article-meta {
    display: flex;
    gap: $spacing-lg;
    flex-wrap: wrap;
    font-size: $font-size-sm;
    color: var(--color-text-secondary);

    time {
      display: inline-block;
    }

    .pinned-badge {
      padding: 0;
      color: var(--color-primary);
      font-weight: bold;
    }
  }

  .article-footer {
    margin-top: $spacing-2xl * 1.5;
    padding-top: $spacing-xl;

    .back-link {
      display: inline-block;
      padding: $spacing-sm $spacing-lg;
      background-color: var(--color-primary);
      color: var(--color-text);
      border-radius: $radius-md;
      text-decoration: none;
      transition: background-color 0.2s ease;

      &:hover {
        background-color: color-mix(in srgb, var(--color-primary), transparent 20%);
        text-decoration: none;
      }
    }
  }
</style>

